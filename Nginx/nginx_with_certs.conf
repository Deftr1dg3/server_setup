
# Main Nginx configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

# HTTP block where your server configurations will reside
http {
    # Log format and access log settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/example_access.log main;
    error_log /var/log/nginx/error.log warn;

    # Server block for HTTPS
    server {
        listen 443 ssl;
	    http2 on;
        server_name sethlab.net www.sethlab.net git.sethlab.net;

        ssl_certificate /etc/nginx/cert/fullchain.pem;
        ssl_certificate_key /etc/nginx/cert/privkey.pem;

        # Optional: Include intermediate certificate
        # ssl_trusted_certificate /etc/nginx/ssl/intermediate.crt;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Optional: Enable SSL session caching for improved performance
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

	location /.well-known/acme-challenge/ {
	    root /usr/share/nginx/html;
	    autoindex on;
	    default_type text/plain;
	}

        # Root location or proxy pass to your application
        location / {
            # serve static files or proxy pass to your backend
            # For example, if you have a backend server:
            # proxy_pass http://127.0.0.1:8000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;

            # Or, if serving static files, specify the root:
            root /usr/share/nginx/html;
            index index.html;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
	server_name sethlab.net www.sethlab.net git.sethlab.net;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
