
# Link config file to the 'sites-enabled'
# ln -s /etc/nginx/sites-available/file.conf /etc/nginx/sites-enabled/file.conf

# Define Log format
#log_format accesslog 'Server Name: $server_name HOST: $host URI: $request_uri IP: $remote_user [$request] msec: $msec request_time: $request_time Client: $http_user_agent';

# log_format accesslog '$remote_addr - $remote_user [$time_local] '
#                     '"$request" $status $body_bytes_sent '
#                     '"$http_referer" "$http_user_agent"';


upstream backend_servers {
	# Specify zone to connect to Nginx Plus
	# zone backend_server_zone 64k;

	# MD5, Provide key manually 
	# hash ... ;
	# hash $request_uri;

	# Direct the same user to the same server
	# ip_hash;

	# Sends request to the server with a least ammount
	# of consecutive connections
	# least_conn;

	server 10.8.0.6:5021;
	server 10.8.0.6:5022;
	server 10.8.0.6:5023;

	# Specify MAX connections to the server
	# max_conns=[num];
	# server [host]:[port] max_conns=300;

	# Specify available places in the waiting queue and timeout.
	# Place in the end. After 'servers'
	# If all servers has their maximum connections, the request will be added to the 
	# waiting 'queue'. Timeout specifies how long server waits till it sends 
	# error message to the client in the queue
	# queue 100 timeout=70;

	# Define weight of each server
	# server [host]:[port] weight=[1-10]; 
	
	# Specify maximum failure attempts to connect to the server and timeout
	# If Nginx still unable to connet after 'max_fail' within 'fail_timeout' attempts
	# the server will be marked as 'unavailable', no further attempts will be performed

	# max_fails=[num] fail_timeout=[num]s;
	# max_fail=10 fail_timeout=90s;
	
	##########################################

	# Enabling Session Persistence - Cookie
	# sticky cookie srv_id expires=1h domain=.example.com path=/;

	# Enabling Session Persistence - Route
	# assigns 'route' to the client
	# server [host]:[port] route=a;
	# sticky route $route_cookie $route_uri;

	# Enabling Session Persistance - Learn
	# sticky learn ... READ NGINX DOCS
}


server {
	listen 80;
	server_name 178.79.149.230;


	# Logs
	# access_log /var/log/nginx/custom.access.log accesslog;
	
	# Defines the root location, where the server will look for a files.
	# root /var/www/html;

	# Add index.php to the list if you are using PHP
        # index index.html index.htm index.nginx-debian.html;


	location / {
		proxy_pass http://backend_servers/;
		proxy_set_header Host $host;
		proxy_set_header X-Forward-Host $server_name;
		proxy_set_header X-Forward_For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;
		# Add header to RESPONSE
		add_header Custom-Header 'Customer Header';
		# Add header to REQUEST
		# proxy_set_header Custom-Header-2 'Custom Header 613';
	}

	# location / {
                # # First attempt to serve request as file, then
                # # as directory, then fall back to displaying a 404.
                # try_files $uri $uri/ =404;
        # }

}

# Redirect https requests to http.
server {
	listen 443;
	server_name 178.79.149.230;

	return 301 http://$host$request_uri;
	}


